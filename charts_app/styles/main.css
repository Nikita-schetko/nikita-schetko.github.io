body {
  background: #fafafa;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  color: #333;
}

.row.no-margin {
  margin: 0;
}

.row.no-margin .col-md-6 {
  padding: 0;
}

@media screen and (min-width: 990px) {
  .border-right-visible-md {
    padding-right: 2px !important;
  }
}

.container-table {
  width: 100%;
  max-width: 800px;
}

.table-data-small {
  margin-bottom: 0;
}

.table-data-small td:nth-child(odd) {
  font-weight: bold;
}

@media screen and (max-width: 990px) {
  .table-data-small {
    table-layout: fixed;
  }
  .table-data-small td:nth-child(odd) {
    width: 25%;
  }
}

.standrat-td {
  background-color: white;
  padding: 5px;
}

.inlined-td {
  border: 0 none;
  padding: 0;
}

.blue-header {
  background-color: #161e5f;
  color: white;
  font-weight: normal;
  text-align: center;
}

.table-pattern {
  font-size: 13px;
}

.tableizer-firstrow th {
  background-color: #2392e4;
  color: white;
  border-bottom: 0;
}

.btn-charts-group .btn {
  white-space: normal;
  border-radius: 0;
  color: #2392e4;
  font-weight: bold;
  overflow-x: hidden;
  text-overflow: ellipsis;
  padding: 4px 8px;
}

.btn-charts-group .btn.selected {
  background-color: #161e5f;
  color: white;
}

.menu-nav.chart-editor {
  padding-left: 0;
}

.menu-nav.chart-editor .wrapper-nowrap {
  white-space: nowrap;
}

.menu-nav.chart-editor .wrapper-nowrap .dropdown {
  display: inline-block;
}

.etf-table {
  border: 1px solid #161e5f;
  border-collapse: separate;
}

.etf-table td {
  vertical-align: top;
}

.etf-table td[rowspan="2"] {
  vertical-align: top;
  border-bottom: 1px solid #dedede;
}

@media screen and (min-width: 768px) {
  .etf-table .hidden-desktop {
    display: none !important;
  }
  .etf-table td:first-child {
    width: 80px;
  }
}

@media screen and (max-width: 768px) {
  .etf-table .hidden-mobile {
    display: none !important;
  }
}

@media screen and (max-width: 480px) {
  .etf-table font[size="2"] {
    font-size: 12px !important;
  }
}

@media screen and (max-width: 480px) {
  .etf-table font[size="2"] {
    font-size: 8pt !important;
  }
}

.etf-table .etf-symbol {
  display: block;
  font-weight: bold;
}

.etf-table .etf-name {
  display: block;
  font-weight: bold;
  color: #161e5f;
}

@media screen and (max-width: 440px) {
  .etf-table .etf-name {
    font-size: 8pt !important;
    font-weight: normal;
  }
}

.etf-table tr:nth-child(2n+4) td {
  border-bottom: 1px solid #dedede;
  padding-bottom: 8px;
}

.etf-table tr:nth-child(2n+5) td {
  padding-top: 8px;
}

body .ui-tooltip {
  border-width: 1px;
  border-radius: 0px;
}

body .ui-tooltip .ui-tooltip-content {
  font-size: 12px;
  font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif;
}

.qf-row td {
  text-align: right;
  padding-top: 0;
}

.qf-row td .qf-items {
  display: block;
  white-space: nowrap;
  margin-right: 5px;
}

.qf-row td .qf-items .qf-legend {
  color: gray;
  display: inline-block;
  margin-right: 15px;
}

.qf-row td .qf-items .qf-legend:before {
  content: 'QUANTFORECAST: ';
}

@media screen and (max-width: 768px) {
  .qf-row td .qf-items .qf-legend:before {
    content: 'QF: ';
  }
}

@media screen and (max-width: 480px) {
  .qf-row td .qf-items .qf-legend {
    font-size: 11px;
    margin-right: 5px;
  }
}

.qf-row td .qf-items i {
  font-style: normal;
  color: gray;
  font-size: 8pt;
  border: 1px #dedede solid;
  border-radius: 5px;
  padding: 3px 5px;
}

.qf-row td .qf-items img {
  margin: 2px 5px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
